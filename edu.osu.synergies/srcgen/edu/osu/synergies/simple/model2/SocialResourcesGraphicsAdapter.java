package edu.osu.synergies.simple.model2;

import org.eclipse.amp.agf.IGraphicsAdapter;
import org.eclipse.amp.agf.GraphicsAdapter;
import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.core.runtime.IAdapterFactory;

import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.jface.viewers.IColorProvider;
import org.eclipse.jface.viewers.ILabelProvider;

/**
 * <!-- begin-user-doc -->
 * Social Resources Java Implementation.
 * <h3>Model II of the Synergies project demonstration models</h3> The purpose of this model is to explore the interaction effects of learners and guides, e.g. club mentors, librarians and museum docents.
The model shows how two dynamics work together. 
<ul><li>First, guides have an impact on learners by encouraging their interest in learning itself. Not all guides are created equal -- some guides are much more effective at increasing learning interest over time. But no matter how effective a guide is, there are limits to how much effect they can have on a given learner.</li><li>Second, a learner's learning interest grows by itself over time. This effect is self-reinforcing, the more a learner becomes engaged in learning, the more their learning interest will grow. There is a minimum level below which some learners will not be able to grow their own learning interest at all, and this is where a guide's influence could be most crucial.</li></ul>
<i>Synergies Project: John Falk, Lynn Direking, Bill Penuel, Miles Parker
Model Development: Miles Parker</i>
 * Generated by AMF for model: SocialResources.metaabm in project: edu.osu.synergies 
 * <!-- end-user-doc -->
 * @generated
 */
public class SocialResourcesGraphicsAdapter extends GraphicsAdapter {

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static IGraphicsAdapter singleton;

	IColorProvider[] socialResourcesColorProviders = new IColorProvider[]{};
	IColorProvider[] guideColorProviders = new IColorProvider[]{GuideStyle2DColorProvider
			.getDefault()};
	IColorProvider[] learnerColorProviders = new IColorProvider[]{LearnerStyle2DColorProvider
			.getDefault()};

	IFigureProvider[] socialResourcesFigureProviders = new IFigureProvider[]{};
	IFigureProvider[] guideFigureProviders = new IFigureProvider[]{GuideStyle2DFigureProvider
			.getDefault()};
	IFigureProvider[] learnerFigureProviders = new IFigureProvider[]{LearnerStyle2DFigureProvider
			.getDefault()};

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getColorsForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IColorProvider[] getColorsForClass(Class type) {
		if (type == SocialResources.class) {
			return socialResourcesColorProviders;
		}
		if (type == Guide.class) {
			return guideColorProviders;
		}
		if (type == Learner.class) {
			return learnerColorProviders;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getFiguresForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IFigureProvider[] getFiguresForClass(Class type) {
		if (type == SocialResources.class) {
			return socialResourcesFigureProviders;
		}
		if (type == Guide.class) {
			return guideFigureProviders;
		}
		if (type == Learner.class) {
			return learnerFigureProviders;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getLabelsForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ILabelProvider[] getLabelsForClass(Class type) {
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static IGraphicsAdapter getDefault() {
		if (singleton == null) {
			singleton = new SocialResourcesGraphicsAdapter();
		}
		return singleton;
	}
}
