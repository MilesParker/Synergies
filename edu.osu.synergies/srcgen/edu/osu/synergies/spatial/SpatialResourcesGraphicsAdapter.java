package edu.osu.synergies.spatial;

import org.eclipse.amp.agf.IGraphicsAdapter;
import org.eclipse.amp.agf.GraphicsAdapter;
import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.core.runtime.IAdapterFactory;

import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.jface.viewers.IColorProvider;
import org.eclipse.jface.viewers.ILabelProvider;

/**
 * <!-- begin-user-doc -->
 * Spatial Resources Java Implementation.
 * <h3>Model I of the Synergies project demonstration models</h3>
<p>The purpose of this model is to explore the interation effects of learners and learning resources across space.
The closer you are to a resource, the more likely you are to engage with it. The more you know a resource the more likely you are to engage with it in the future.
How might these basic assumptions effect the distribution of learning interest across a diverse community?</p>
<i>Synergies Project: John Falk, Lynn Direking, Bill Penuel, Miles Parker
Model Development: Miles Parker</i>
 * Generated by AMF for model: SpatialResources.metaabm in project: edu.osu.synergies 
 * <!-- end-user-doc -->
 * @generated
 */
public class SpatialResourcesGraphicsAdapter extends GraphicsAdapter {

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static IGraphicsAdapter singleton;

	IColorProvider[] spatialResourcesColorProviders = new IColorProvider[]{};
	IColorProvider[] homeColorProviders = new IColorProvider[]{HomeStyle2DColorProvider
			.getDefault()};
	IColorProvider[] learnerColorProviders = new IColorProvider[]{LearnerStyle2DColorProvider
			.getDefault()};
	IColorProvider[] learningResourceColorProviders = new IColorProvider[]{LearningResourceStyle2DColorProvider
			.getDefault()};
	IColorProvider[] resourceInteractionColorProviders = new IColorProvider[]{ResourceInteractionStyle2DColorProvider
			.getDefault()};
	IColorProvider[] lotColorProviders = new IColorProvider[]{LotStyle2DColorProvider
			.getDefault()};

	IFigureProvider[] spatialResourcesFigureProviders = new IFigureProvider[]{};
	IFigureProvider[] homeFigureProviders = new IFigureProvider[]{HomeStyle2DFigureProvider
			.getDefault()};
	IFigureProvider[] learnerFigureProviders = new IFigureProvider[]{LearnerStyle2DFigureProvider
			.getDefault()};
	IFigureProvider[] learningResourceFigureProviders = new IFigureProvider[]{LearningResourceStyle2DFigureProvider
			.getDefault()};
	IFigureProvider[] resourceInteractionFigureProviders = new IFigureProvider[]{ResourceInteractionStyle2DFigureProvider
			.getDefault()};
	IFigureProvider[] lotFigureProviders = new IFigureProvider[]{LotStyle2DFigureProvider
			.getDefault()};

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getColorsForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IColorProvider[] getColorsForClass(Class type) {
		if (type == SpatialResources.class) {
			return spatialResourcesColorProviders;
		}
		if (type == Home.class) {
			return homeColorProviders;
		}
		if (type == Learner.class) {
			return learnerColorProviders;
		}
		if (type == LearningResource.class) {
			return learningResourceColorProviders;
		}
		if (type == ResourceInteraction.class) {
			return resourceInteractionColorProviders;
		}
		if (type == Lot.class) {
			return lotColorProviders;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getFiguresForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IFigureProvider[] getFiguresForClass(Class type) {
		if (type == SpatialResources.class) {
			return spatialResourcesFigureProviders;
		}
		if (type == Home.class) {
			return homeFigureProviders;
		}
		if (type == Learner.class) {
			return learnerFigureProviders;
		}
		if (type == LearningResource.class) {
			return learningResourceFigureProviders;
		}
		if (type == ResourceInteraction.class) {
			return resourceInteractionFigureProviders;
		}
		if (type == Lot.class) {
			return lotFigureProviders;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getLabelsForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ILabelProvider[] getLabelsForClass(Class type) {
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static IGraphicsAdapter getDefault() {
		if (singleton == null) {
			singleton = new SpatialResourcesGraphicsAdapter();
		}
		return singleton;
	}
}
